{"version":3,"sources":["webpack://muhrusdi.github.io/./src/components/blog/blog-item/index.tsx","webpack://muhrusdi.github.io/./src/components/blog/lastest/index.tsx","webpack://muhrusdi.github.io/./src/pages/blog/index.tsx"],"names":["data","G","width","style","height","className","image","getImage","frontmatter","featuredImage","alt","src","title","abstract","Link","to","fields","slug","size","formatDate","publishedOn","Latest","badge","seoTitle","defaultProps","useStaticQuery","featured","edges","node","childMdx","allFile","map","key","isPublished"],"mappings":"4LAsCA,IA/B2B,SAAC,GAAY,IAAXA,EAAU,EAAVA,KAC3B,OACE,2BACE,2BACE,2BACE,gBAAC,EAAAC,EAAD,CAAaC,MAAO,IAAKC,MAAO,CAACC,OAAQ,KAAMC,UAAU,oBAAoBC,OAAOC,OAASP,EAAKQ,YAAYC,eAAgBC,IAAI,KAE/HV,EAAKQ,YAAYC,cAEd,KADF,uBAAKN,MAAO,CAACC,OAAQ,KAAMC,UAAU,iCAAiCM,IAAI,+EAA+ED,IAAI,OAKrK,2BACE,2BACE,sBAAIL,UAAU,uCAAuCL,EAAKQ,YAAYI,OACtE,qBAAGP,UAAU,mCAAmCL,EAAKQ,YAAYK,UACjE,gBAAC,KAAD,CAAgBR,UAAU,8CACxB,gBAAC,EAAAS,KAAD,CAAMC,GAAE,SAAWf,EAAKgB,OAAOC,KAAQZ,UAAU,+BAC/C,uBAAKA,UAAU,qBACb,yCADF,IACyB,gBAAC,MAAD,CAAgBa,KAAM,OAGjD,wBAAMb,UAAU,iCAAgCc,OAAWnB,EAAKQ,YAAYY,oB,8ECzBlFC,EAAmB,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,MAAOtB,EAAU,EAAVA,KAChC,OACE,uBAAKK,UAAU,8BACb,uBAAKA,UAAU,wBACb,2BACE,wBAAMA,UAAU,qEAAqEiB,GACrF,sBAAIjB,UAAU,mEAAmEL,aAAjF,EAAiFA,EAAMQ,YAAYe,UACnG,qBAAGlB,UAAU,2CAA2CL,aAAxD,EAAwDA,EAAMQ,YAAYK,UAC1E,gBAAC,EAAAC,KAAD,CAAMC,GAAE,UAAWf,aAAX,EAAWA,EAAMgB,OAAOC,MAAQZ,UAAU,8BAChD,uBAAKA,UAAU,qBACb,yCADF,IACyB,gBAAC,MAAD,CAAgBa,KAAM,SAKrD,uBAAKb,UAAU,wCACb,2BACE,gBAAC,EAAAJ,EAAD,CAAaC,MAAO,IAAKC,MAAO,CAACC,OAAQ,KAAMC,UAAU,oBAAoBC,OAAOC,OAASP,aAAD,EAACA,EAAMQ,YAAYC,eAAgBC,IAAI,SAO7I,MAEAW,EAAOG,aAAe,CACpBF,MAAO,yB,+FCqET,UA/FwB,WACtB,IAAMtB,GAAOyB,oBAAe,cA6DrBC,EAAY1B,EAAK0B,SAASC,MAAjC,GACA,OACE,gCACE,gBAAC,IAAD,KACE,2BACE,uBAAKtB,UAAU,QACb,gBAAC,IAAD,CAAYiB,MAAM,WAAWtB,KAAM0B,aAAF,EAAEA,EAAUE,KAAKC,YAEpD,uBAAKxB,UAAU,SACb,sBAAIA,UAAU,yCAEVL,aAFJ,EAEIA,EAAM8B,QAAQH,MAAMI,KAAI,WAASC,GAAS,IAAhBJ,EAAe,EAAfA,KACxB,OAKEA,EAAKC,SAASrB,YAAYyB,YACxB,sBAAID,IAAKA,GACP,gBAAC,IAAD,CAAUhC,KAAM4B,EAAKC,YAErB","file":"component---src-pages-blog-index-tsx-54fba3a89fb40c92fdf5.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { getImage, GatsbyImage } from \"gatsby-plugin-image\"\r\nimport { BiChevronRight } from \"react-icons/bi\"\r\nimport { BlogItemFooter } from \"components/utils\"\r\nimport { formatDate } from \"utils\"\r\n\r\nconst BlogItem: React.FC = ({data}) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <GatsbyImage width={100} style={{height: 200}} className=\"rounded-lg w-full\" image={getImage(data.frontmatter.featuredImage)} alt=\"\"/>\r\n          {\r\n            !data.frontmatter.featuredImage ? (\r\n              <img style={{height: 200}} className=\"rounded-lg object-cover w-full\" src=\"https://res.cloudinary.com/muhrusdi/image/upload/v1623214698/placeholder.jpg\" alt=\"\"/>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <h2 className=\"text-xl mt-6 font-bold line-clamp-2\">{data.frontmatter.title}</h2>\r\n          <p className=\"mt-4 text-gray-400 line-clamp-2\">{data.frontmatter.abstract}</p>\r\n          <BlogItemFooter className=\"flex flex-row-reverse justify-between mt-4\">\r\n            <Link to={`/blog/${data.fields.slug}`} className=\"inline-block transition-all\">\r\n              <div className=\"flex items-center\">\r\n                <span>Read more</span> <BiChevronRight size={24}/>\r\n              </div>\r\n            </Link>\r\n            <span className=\"text-gray-400 transition-all\">{formatDate(data.frontmatter.publishedOn)}</span>\r\n          </BlogItemFooter>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogItem","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { getImage, GatsbyImage } from \"gatsby-plugin-image\"\r\nimport { BiChevronRight } from \"react-icons/bi\"\r\n\r\nconst Latest: React.FC = ({badge, data}) => {\r\n  return (\r\n    <div className=\"md:flex -mx-4 items-center\">\r\n      <div className=\"w-full md:w-1/2 px-4\">\r\n        <div>\r\n          <span className=\"inline-block rounded-full text-xs uppercase py-1 px-4 bg-gray-600\">{badge}</span>\r\n          <h2 className=\"text-4xl sm:text-5xl sm:leading-12 mt-6 font-black line-clamp-3\">{data?.frontmatter.seoTitle}</h2>\r\n          <p className=\"mt-8 text-lg text-gray-400 line-clamp-2\">{data?.frontmatter.abstract}</p>\r\n          <Link to={`/blog/${data?.fields.slug}`} className=\"mt-10 inline-block text-lg\">\r\n            <div className=\"flex items-center\">\r\n              <span>Read more</span> <BiChevronRight size={24}/>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-full sm:w-1/2 px-4 hidden md:block\">\r\n        <div>\r\n          <GatsbyImage width={100} style={{height: 300}} className=\"rounded-lg w-full\" image={getImage(data?.frontmatter.featuredImage)} alt=\"\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Latest\r\n\r\nLatest.defaultProps = {\r\n  badge: \"Latest from the blog\"\r\n}","import React from \"react\"\r\nimport Layout from \"containers/layout\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport BlogItem from \"components/blog/blog-item\"\r\nimport LatestBlog from \"components/blog/lastest\"\r\n\r\nconst Blogs: React.FC = () => {\r\n  const data = useStaticQuery(graphql`\r\n    fragment Blog on Mdx {\r\n      frontmatter {\r\n        title\r\n        publishedOn\r\n        seoTitle\r\n        abstract\r\n        isPublished\r\n        featuredImage {\r\n          childImageSharp {\r\n            gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED)\r\n          }\r\n        }\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n      body\r\n      slug\r\n      excerpt\r\n      internal {\r\n        type\r\n      }\r\n    }\r\n\r\n    query {\r\n      featured: allFile(\r\n        limit: 1\r\n        sort: {fields: childMdx___frontmatter___publishedOn, order: DESC}\r\n        filter: {\r\n          childMdx: {\r\n            frontmatter: {isPublished: {eq: true}, featured: {eq: true}}\r\n          }\r\n          sourceInstanceName: { eq: \"blogs\" }\r\n        }\r\n      ) {\r\n        edges {\r\n          node {\r\n            childMdx {\r\n              ...Blog\r\n            }\r\n          }\r\n        }\r\n      }\r\n      allFile(\r\n        sort: {fields: childMdx___frontmatter___publishedOn, order: DESC}\r\n        filter: {\r\n          sourceInstanceName: { eq: \"blogs\" }\r\n        }\r\n      ) {\r\n        edges {\r\n          node {\r\n            childMdx {\r\n              ...Blog\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const [featured] = data.featured.edges\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <div>\r\n          <div className=\"py-8\">\r\n            <LatestBlog badge=\"Featured\" data={featured?.node.childMdx}/>\r\n          </div>\r\n          <div className=\"mt-20\">\r\n            <ul className=\"grid grid-cols-1 sm:grid-cols-3 gap-8\">\r\n              {\r\n                data?.allFile.edges.map(({node}, key) => {\r\n                  return process.env.NODE_ENV !== \"production\" ? (\r\n                    <li key={key}>\r\n                      <BlogItem data={node.childMdx}/>\r\n                    </li>\r\n                  ) : (\r\n                    node.childMdx.frontmatter.isPublished ? (\r\n                      <li key={key}>\r\n                        <BlogItem data={node.childMdx}/>\r\n                      </li>\r\n                    ) : null\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Blogs"],"sourceRoot":""}