{
    "componentChunkName": "component---src-templates-cheatsheets-detail-index-tsx",
    "path": "/cheatsheet/bilangan-prima",
    "result": {"pageContext":{"slug":"bilangan-prima","data":{"frontmatter":{"title":"Bilangan Prima","publishedOn":"2021-05-20","abstract":"Dalam matematika, bilangan prima adalah bilangan asli yang lebih besar dari angka 1, yang faktor pembaginya adalah 1 dan bilangan itu sendiri. 2 dan 3 adalah bilangan prima.","isPublished":false},"fields":{"slug":"bilangan-prima"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Bilangan Prima\",\n  \"abstract\": \"Dalam matematika, bilangan prima adalah bilangan asli yang lebih besar dari angka 1, yang faktor pembaginya adalah 1 dan bilangan itu sendiri. 2 dan 3 adalah bilangan prima.\",\n  \"isPublished\": false,\n  \"featured\": false,\n  \"publishedOn\": \"2021-05-20\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Bilangan prima adalah bilangan lebih dari 1 dan hanya bisa dibagi dengan angka 1 atau bilangan itu sendiri. Angka 2 adalah bilangan prima karena hanya bisa dibagi dengan angka 1 dan angka 2.\\nAngka 8 bukanlah bilangan prima karena selain bisa dibagi dengan angka 1 dan 8, 8 juga bisa dibagi dengan angka 2 dan 4. \"), mdx(\"p\", null, \"Untuk mengetes bilangan prima yaitu dengan mengiterate dari 2 ke n, check apakah hasil pembagian\\nsama dengan 0.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const isPrime = (n) => {\\n  if (n <= 1) {\\n    return false\\n  }\\n\\n  for (let i = 2; i < n; i++) {\\n    if (n % i == 0) {\\n      return false\\n    }\\n  }\\n\\n  return true\\n}\\n\\nisPrime(19) // true\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"TIme Complexity: O(n)\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"1-bilangan-prima","excerpt":"Bilangan prima adalah bilangan lebih dari 1 dan hanya bisa dibagi dengan angka 1 atau bilangan itu sendiri. Angka 2 adalah bilangan primaâ€¦"}}},
    "staticQueryHashes": ["45326706","558488063"]}